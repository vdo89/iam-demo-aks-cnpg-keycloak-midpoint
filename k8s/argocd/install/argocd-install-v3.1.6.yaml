  resource.customizations.health.k8s.keycloak.org_Keycloak: |
    hs = {}
    hs.status = "Progressing"
    hs.message = "Waiting for Keycloak to become Ready"
    if obj.status ~= nil then
      if obj.status.ready == true then
        hs.status = "Healthy"
        hs.message = obj.status.message or "Keycloak instance is ready"
        return hs
      end

      local phase = obj.status.phase
      if phase ~= nil and phase ~= "" then
        if phase == "Failing" then
          hs.status = "Degraded"
          hs.message = obj.status.message or "Keycloak reconciliation reported Failing"
          return hs
        end
        hs.message = "Keycloak phase: " .. phase
      end

      if obj.status.conditions ~= nil then
        for _, condition in ipairs(obj.status.conditions) do
          if condition.type == "Ready" then
            if condition.status == "True" then
              hs.status = "Healthy"
              hs.message = condition.message or obj.status.message or "Keycloak instance is ready"
              return hs
            elseif condition.status == "False" then
              hs.status = "Degraded"
              hs.message = condition.message or condition.reason or "Keycloak reports Ready=False"
              return hs
            end
          end

          if (condition.type == "HasErrors" or condition.type == "Degraded") and condition.status == "True" then
            hs.status = "Degraded"
            hs.message = condition.message or condition.reason or "Keycloak reported errors"
            return hs
          end
        end
      end

      if obj.status.message ~= nil and obj.status.message ~= "" then
        hs.message = obj.status.message
      end
    end
    return hs
  resource.customizations.health.k8s.keycloak.org_KeycloakRealmImport: |
    hs = {}
    hs.status = "Progressing"
    hs.message = "Waiting for Keycloak realm import to finish"
    if obj.status ~= nil then
      if obj.status.ready == true then
        hs.status = "Healthy"
        hs.message = obj.status.message or "Realm import completed"
        return hs
      end

      local phase = obj.status.phase
      if phase ~= nil and phase ~= "" then
        if phase == "Done" then
          hs.status = "Healthy"
          hs.message = obj.status.message or "Realm import completed"
          return hs
        elseif phase == "Failing" then
          hs.status = "Degraded"
          hs.message = obj.status.message or "Realm import reported Failing"
          return hs
        end
        hs.message = "Realm import phase: " .. phase
      end

      if obj.status.conditions ~= nil then
        for _, condition in ipairs(obj.status.conditions) do
          if condition.type == "Done" or condition.type == "Ready" then
            if condition.status == "True" then
              hs.status = "Healthy"
              hs.message = condition.message or obj.status.message or "Realm import completed"
              return hs
            elseif condition.status == "False" then
              hs.status = "Degraded"
              hs.message = condition.message or condition.reason or "Realm import reports Ready=False"
              return hs
            end
          end

          if (condition.type == "HasErrors" or condition.type == "Degraded") and condition.status == "True" then
            hs.status = "Degraded"
            hs.message = condition.message or condition.reason or "Realm import reported errors"
            return hs
          end
        end
      end

      if obj.status.message ~= nil and obj.status.message ~= "" then
        hs.message = obj.status.message
      end
    end
    return hs
