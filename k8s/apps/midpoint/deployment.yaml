apiVersion: apps/v1
kind: Deployment
metadata:
  name: midpoint
  namespace: iam
spec:
  replicas: 1
  selector:
    matchLabels: { app: midpoint }
  template:
    metadata:
      labels: { app: midpoint }
    spec:
      initContainers:
        - name: midpoint-home-init
          image: evolveum/midpoint:4.9
          command:
            - /bin/sh
            - -c
            - |
              set -eu
              dest="/midpoint-home"
              if [ ! -d "${dest}" ]; then
                echo "Creating midPoint home directory at ${dest}"
                mkdir -p "${dest}"
              fi

              if [ -z "$(ls -A "${dest}")" ]; then
                echo "Populating midPoint home directory with default contents"
                cp -a /opt/midpoint/var/. "${dest}/"
              else
                echo "midPoint home directory already populated; skipping default copy"
              fi
          volumeMounts:
            - name: midpoint-home
              mountPath: /midpoint-home
      containers:
        - name: midpoint
          image: evolveum/midpoint:4.9
          ports:
            - name: http
              containerPort: 8080
          env:
            - name: MP_SET_midpoint_administrator_initialPassword
              valueFrom:
                secretKeyRef:
                  name: midpoint-admin
                  key: password
            - name: MIDPOINT_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: midpoint-db-app
                  key: password
            - name: MP_SET_midpoint_repository_database
              value: postgresql
            - name: MP_SET_midpoint_repository_jdbcUrl
              value: jdbc:postgresql://iam-db-rw.iam.svc.cluster.local:5432/midpoint
            - name: MP_SET_midpoint_repository_jdbcUsername
              valueFrom:
                secretKeyRef:
                  name: midpoint-db-app
                  key: username
            - name: MP_SET_midpoint_repository_jdbcPassword
              valueFrom:
                secretKeyRef:
                  name: midpoint-db-app
                  key: password
            - name: MP_UNSET_midpoint_repository_hibernateHbm2ddl
              value: "1"
            - name: MP_NO_ENV_COMPAT
              value: "1"
            - name: MP_MEM_INIT
              value: "768M"
            - name: MP_MEM_MAX
              value: "1536M"
          volumeMounts:
            - name: midpoint-home
              mountPath: /opt/midpoint/var
            - name: config-xml
              mountPath: /opt/midpoint/var/config.xml
              subPath: config.xml
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              cpu: 1000m
              memory: 2Gi
      volumes:
        - name: midpoint-home
          emptyDir: {}
        - name: config-xml
          configMap:
            name: midpoint-config
---
apiVersion: v1
kind: Service
metadata:
  name: midpoint
  namespace: iam
spec:
  selector: { app: midpoint }
  ports:
    - name: http
      port: 8080
      targetPort: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: midpoint
  namespace: iam
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "16m"
spec:
  ingressClassName: nginx
  rules:
    - host: mp.127.0.0.1.nip.io  # patched by you later (optional)
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: midpoint
                port:
                  number: 8080
