apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: addons-charts
  namespace: argocd
spec:
  goTemplate: true
  generators:
    - list:
        elements:
          - name: cert-manager
            namespace: cert-manager
            repoURL: https://charts.jetstack.io
            chart: cert-manager
            targetRevision: v1.15.1
            releaseName: cert-manager
            values: '{"installCRDs":true,"prometheus":{"enabled":false}}'
          - name: cnpg-operator
            namespace: cnpg-system
            repoURL: https://cloudnative-pg.github.io/charts
            chart: cloudnative-pg
            targetRevision: 0.22.1
            releaseName: cnpg
            values: '{}'
          - name: ingress-nginx
            namespace: ingress-nginx
            repoURL: https://kubernetes.github.io/ingress-nginx
            chart: ingress-nginx
            targetRevision: 4.10.1
            releaseName: ingress-nginx
            # Use the built-in status endpoint exposed on the default server so Azure probes
            # get HTTP 200s even before any ingress rules exist.
            values: |
              controller:
                service:
                  annotations:
                    service.beta.kubernetes.io/azure-load-balancer-health-probe-request-path: /is-dynamic-lb-initialized
                  type: LoadBalancer
                # Treat the ingress-nginx class as default so Keycloak's operator-managed ingress
                # (which initially shipped without an explicit class) is reconciled even before the
                # configure_demo_hosts workflow rewrites the manifests with the detected class.
                watchIngressWithoutClass: true
                ingressClassResource:
                  default: true
  template:
    metadata:
      name: '{{.name}}'
      namespace: argocd
    spec:
      project: default
      destination:
        server: https://kubernetes.default.svc
        namespace: '{{.namespace}}'
      source:
        repoURL: '{{.repoURL}}'
        chart: '{{.chart}}'
        targetRevision: '{{.targetRevision}}'
        helm:
          releaseName: '{{.releaseName}}'
          values: '{{.values}}'
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
  templatePatch: |
    {{- if or (eq .name "cnpg-operator") (eq .name "cert-manager") }}
    spec:
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true
    {{- end }}
