name: 03 - Seed midPoint demo objects

on:
  workflow_dispatch:
    inputs:
      NAMESPACE_IAM:
        description: 'Namespace for IAM stack'
        required: false
        default: 'iam'
      MIDPOINT_URL:
        description: 'Base URL for midPoint (internal service is used if empty)'
        required: false
        default: ''

permissions:
  id-token: write
  contents: read

jobs:
  seed:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get AKS credentials
        uses: azure/aks-set-context@v4
        with:
          resource-group: ${{ vars.RESOURCE_GROUP || 'rwsdemo-rg' }}
          cluster-name: ${{ vars.AKS_NAME || 'rwsdemo-aks' }}

      - name: Create ConfigMap with midPoint objects
        run: |
          kubectl -n ${{ inputs.NAMESPACE_IAM }} create configmap midpoint-objects --from-file=k8s/apps/midpoint/objects --dry-run=client -o yaml | kubectl apply -f -

      - name: Apply seeder Job
        env:
          MIDPOINT_PASSWORD: ${{ secrets.MIDPOINT_ADMIN_PASSWORD }}
        run: |
          kubectl -n ${{ inputs.NAMESPACE_IAM }} delete job midpoint-seeder --ignore-not-found
          # pass MIDPOINT_URL as env if provided
          if [ -n "${{ inputs.MIDPOINT_URL }}" ]; then
            sed "s#{{MIDPOINT_URL}}#${{ inputs.MIDPOINT_URL }}#g" k8s/apps/midpoint/seeder-job.yaml | kubectl apply -f -
          else
            sed "s#{{MIDPOINT_URL}}##g" k8s/apps/midpoint/seeder-job.yaml | kubectl apply -f -
          fi
          kubectl -n ${{ inputs.NAMESPACE_IAM }} wait --for=condition=complete job/midpoint-seeder --timeout=600s || true

      - name: Seeder logs
        run: kubectl -n ${{ inputs.NAMESPACE_IAM }} logs job/midpoint-seeder --tail=-1 || true
