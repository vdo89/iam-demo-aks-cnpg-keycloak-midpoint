name: 01 - Provision AKS

on:
  workflow_dispatch:
    inputs:
      ACTION:
        description: Terraform action (apply or destroy)
        required: true
        default: apply
        type: choice
        options: [apply, destroy]
      LOCATION:
        description: Azure region
        required: true
        default: westeurope
      RESOURCE_PREFIX:
        description: Resource prefix for Azure resources
        required: true
        default: rwsdemo

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      TF_IN_AUTOMATION: "true"
    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - uses: hashicorp/setup-terraform@v3
      - name: Ensure remote state backend
        env:
          RG: ${{ inputs.RESOURCE_PREFIX }}-tfstate
          SA: ${{ inputs.RESOURCE_PREFIX }}tfstate
          LOCATION: ${{ inputs.LOCATION }}
        run: |
          az group create --name "$RG" --location "$LOCATION" --only-show-errors
          az storage account create \
            --name "$SA" \
            --resource-group "$RG" \
            --location "$LOCATION" \
            --sku Standard_LRS \
            --kind StorageV2 \
            --https-only true \
            --allow-blob-public-access false \
            --only-show-errors
          az storage container create --name tfstate --account-name "$SA" --auth-mode login --only-show-errors
          ACCOUNT_KEY=$(az storage account keys list --resource-group "$RG" --account-name "$SA" --query '[0].value' -o tsv)
          echo "ARM_ACCESS_KEY=$ACCOUNT_KEY" >> "$GITHUB_ENV"
      - name: Terraform init
        working-directory: infra/azure/terraform
        run: |
          terraform init -input=false \
            -backend-config="resource_group_name=${{ inputs.RESOURCE_PREFIX }}-tfstate" \
            -backend-config="storage_account_name=${{ inputs.RESOURCE_PREFIX }}tfstate" \
            -backend-config="container_name=tfstate" \
            -backend-config="key=${{ inputs.RESOURCE_PREFIX }}.tfstate"
      - name: Terraform fmt
        working-directory: infra/azure/terraform
        run: terraform fmt -check
      - name: Terraform plan/apply
        working-directory: infra/azure/terraform
        env:
          TF_VAR_location: ${{ inputs.LOCATION }}
          TF_VAR_prefix: ${{ inputs.RESOURCE_PREFIX }}
        run: |
          if [ "${{ inputs.ACTION }}" = "destroy" ]; then
            terraform destroy -auto-approve
          else
            terraform apply -auto-approve
          fi
