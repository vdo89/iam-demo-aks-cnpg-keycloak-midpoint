apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cm
  labels:
    app.kubernetes.io/name: argocd-cm
    app.kubernetes.io/part-of: argocd
  annotations:
    argocd.argoproj.io/sync-options: Prune=false
data:
  kustomize.buildOptions: --load-restrictor LoadRestrictionsNone
  resource.customizations.health.k8s.keycloak.org_Keycloak: |
    hs = {}
    if obj.status ~= nil then
      if obj.status.conditions ~= nil then
        for _, condition in ipairs(obj.status.conditions) do
          local status_value = condition.status
          local is_true = status_value == true or status_value == "True"
          local is_false = status_value == false or status_value == "False"
          if condition.type == "Ready" then
            if is_true then
              hs.status = "Healthy"
              if condition.message ~= nil and condition.message ~= "" then
                hs.message = condition.message
              else
                hs.message = "Keycloak reports ready"
              end
              return hs
            end
            if is_false then
              local lower_reason = nil
              if condition.reason ~= nil then
                lower_reason = string.lower(condition.reason)
                if string.find(lower_reason, "error") ~= nil or string.find(lower_reason, "fail") ~= nil then
                  hs.status = "Degraded"
                  if condition.message ~= nil and condition.message ~= "" then
                    hs.message = condition.message
                  else
                    hs.message = condition.reason
                  end
                  return hs
                end
              end
              if lower_reason ~= nil and string.find(lower_reason, "health") ~= nil then
                hs.status = "Degraded"
                if condition.message ~= nil and condition.message ~= "" then
                  hs.message = condition.message
                else
                  hs.message = "Keycloak health endpoint reports not ready"
                end
                return hs
              end
              if condition.message ~= nil and condition.message ~= "" then
                hs.message = condition.message
              end
            end
          end
          if condition.type == "HasErrors" and is_true then
            hs.status = "Degraded"
            if condition.message ~= nil and condition.message ~= "" then
              hs.message = condition.message
            else
              hs.message = "Keycloak reports errors"
            end
            return hs
          end
        end
      end
      if
        obj.status.ready == true
        or obj.status.phase == "Ready"
        or obj.status.phase == "Running"
      then
        hs.status = "Healthy"
        hs.message = "Keycloak reports ready"
        return hs
      end
      if obj.status.phase == "Error" then
        hs.status = "Degraded"
        hs.message = obj.status.message
        return hs
      end
      if obj.status.message ~= nil then
        hs.message = obj.status.message
      end
    end
    hs.status = "Progressing"
    if hs.message == nil then
      hs.message = "Waiting for Keycloak to report ready"
    end
    return hs
